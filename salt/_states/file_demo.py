def managed(
    name,
    source=None,
    source_hash="",
    source_hash_name=None,
    keep_source=True,
    user=None,
    group=None,
    mode=None,
    attrs=None,
    template=None,
    makedirs=False,
    dir_mode=None,
    context=None,
    replace=True,
    defaults=None,
    backup="",
    show_changes=True,
    create=True,
    contents=None,
    tmp_dir="",
    tmp_ext="",
    contents_pillar=None,
    contents_grains=None,
    contents_newline=True,
    contents_delimiter=":",
    encoding=None,
    encoding_errors="strict",
    allow_empty=True,
    follow_symlinks=True,
    check_cmd=None,
    skip_verify=False,
    selinux=None,
    win_owner=None,
    win_perms=None,
    win_deny_perms=None,
    win_inheritance=True,
    win_perms_reset=False,
    verify_ssl=True,
    use_etag=False,
    **kwargs
):
    registered_contents = __context__.get("contents")
    if registered_contents:
        contents = registered_contents
    ret = __states__["file.managed"](
        name,
        source=source,
        source_hash=source_hash,
        source_hash_name=source_hash_name,
        keep_source=keep_source,
        user=user,
        group=group,
        mode=mode,
        attrs=attrs,
        template=template,
        makedirs=makedirs,
        dir_mode=dir_mode,
        context=context,
        replace=replace,
        defaults=defaults,
        backup=backup,
        show_changes=show_changes,
        create=create,
        contents=contents,
        tmp_dir=tmp_dir,
        tmp_ext=tmp_ext,
        contents_pillar=contents_pillar,
        contents_grains=contents_grains,
        contents_newline=contents_newline,
        contents_delimiter=contents_delimiter,
        encoding=encoding,
        encoding_errors=encoding_errors,
        allow_empty=allow_empty,
        follow_symlinks=follow_symlinks,
        check_cmd=check_cmd,
        skip_verify=skip_verify,
        selinux=selinux,
        win_owner=win_owner,
        win_perms=win_perms,
        win_deny_perms=win_deny_perms,
        win_inheritance=win_inheritance,
        win_perms_reset=win_perms_reset,
        verify_ssl=verify_ssl,
        use_etag=use_etag,
        **kwargs
    )
    return ret
